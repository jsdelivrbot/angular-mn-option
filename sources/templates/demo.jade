html(ng-app='app')
  meta(name='viewport' content='width=device-width, user-scalable=no')
  link(rel='stylesheet', href='https://cdnjs.cloudflare.com/ajax/libs/material-design-iconic-font/2.2.0/css/material-design-iconic-font.min.css')

  block styles
    link(rel='stylesheet' href='docs/vendor.css')

  style.
    .demo {
      margin-bottom: 5em;
    }

    .demo .mn-layout-container > div {
      margin: 0 auto;
    }

    @media (max-width: 599px) {
      mn-option {text-align: center}
    }

    @media (min-width: 600px) {
      .demo .mn-layout-container > div {
        width: 80%;
      }
    }

    .demo h3 {
      margin-top: 7em;
      padding-bottom: .5em;
      color: #868e96;
    }

body(ng-controller='IndexController as controller')
  h2 angular-mn-option
  include github-corner

  form.demo.mn-layout-fullscreen.mn-layout-centered
    .mn-layout-container
      h3.align-center ng-repeat: {{ controller.list ? controller.list : 'undefined' }}
      .mn-layout-column.mn-layout-sm-row
        mn-option.flex.natural(ng-repeat='option in controller.list2' type='checkbox' ng-model='controller.list' value='{{ option }}')

    //- h3.align-center tests {{ controller.listString }}
    //- div(style='text-align: center; width: 100%')
      mn-option.natural.flex(value='string 1' ng-model='controller.listString')
      mn-option.natural.flex(value='string 2' ng-model='controller.listString')
      mn-option.natural.flex(value='{{ controller.obj }}' ng-model='controller.listString')
      mn-option.natural.flex(value='{{ controller.array }}' ng-model='controller.listString')

    //- .mn-layout-container
    //-   h3.align-center checkbox with different values {{ controller.mixed ? controller.mixed : 'undefined' }}
      //- .mn-layout-column.mn-layout-sm-row(style='flex-wrap: wrap')
      div(style='text-align: center')
        mn-option.natural.flex(placeholder='string' ng-model='controller.mixed' type='checkbox' value='test5' checked)
        mn-option.natural.flex(placeholder='object' ng-model='controller.mixed' type='checkbox' value='{name: "lannister"}')
        mn-option.natural.flex(placeholder='number' ng-model='controller.mixed' type='checkbox' value='5')
        mn-option.natural.flex(placeholder='true' ng-model='controller.mixed' type='checkbox' value='true')
        mn-option.natural.flex(placeholder='false' ng-model='controller.mixed' type='checkbox' value='false')
        mn-option.natural.flex(placeholder='array' ng-model='controller.mixed' type='checkbox' value='["test", 5]')
        mn-option.natural.flex(placeholder='syntax error' ng-model='controller.mixed' type='checkbox' value='["test", 5, {name: "test"}, name: "test"]')
        mn-option.natural.flex(placeholder='mixed' ng-model='controller.mixed' type='checkbox' value='["test", 5, {name: "test"}, {name: "test"}]')
        mn-option.natural.flex(placeholder='variable' ng-model='controller.mixed' type='checkbox' value='document')
          
    //- .mn-layout-container
    //-   h3.align-center radio type: {{ controller.list ? controller.list : 'undefined' }}
      .mn-layout-column.mn-layout-sm-row
        mn-option.flex(type='radio' value='stark' ng-model='controller.list')
        mn-option.flex(type='radio' value='targaryen' ng-model='controller.list')
        mn-option.flex(type='radio' value='baratheon' ng-model='controller.list')
        mn-option.flex(type='radio' value='lannister' ng-model='controller.list')

      h3.align-center checkbox type: {{ controller.list2 }}
      .mn-layout-column.mn-layout-sm-row
        mn-option.flex(name='list2' type='checkbox' value='ned' ng-model='controller.list2')
        mn-option.flex(name='list2' type='checkbox' value='daenerys' ng-model='controller.list2')
        mn-option.flex(name='list2' type='checkbox' value='robert' ng-model='controller.list2')
        mn-option.flex(name='list2' type='checkbox' value='cersei' ng-model='controller.list2')
      
      h3.align-center natural checkbox type: {{ controller.list3 }}
      .mn-layout-column.mn-layout-sm-row
        mn-option.natural.flex(name='list3' type='checkbox' value='ned' ng-model='controller.list3')
        mn-option.natural.flex(name='list3' type='checkbox' value='daenerys' ng-model='controller.list3')
        mn-option.natural.flex(name='list3' type='checkbox' value='robert' ng-model='controller.list3')
        mn-option.natural.flex(name='list3' type='checkbox' value='cersei' ng-model='controller.list3')

      h3.align-center natural radio type: {{ controller.list4 ? controller.list4 : 'undefined' }}
      .mn-layout-column.mn-layout-sm-row
        mn-option.natural.flex(name='list4' type='radio' value='ned' ng-model='controller.list4')
        mn-option.natural.flex(name='list4' type='radio' value='daenerys' ng-model='controller.list4')
        mn-option.natural.flex(name='list4' type='radio' value='robert' ng-model='controller.list4')
        mn-option.natural.flex(name='list4' type='radio' value='cersei' ng-model='controller.list4')

  .docs.mn-layout-container
    mn-code.sh.
      npm install --save angular-mn-option

    p And bundle dependencies and main files in <strong>dist/</strong> with your preferred tool.

    h3 usage
    mn-code.js.
      // add dependency in you module
      angular.module('app', [
        'mn-option'
      ]);

    p And then, in your html, you can use the tag

    mn-code.html.
      <!-- checkbox -->
      <mn-option ng-model="house" value="stark"></mn-option>
      <mn-option ng-model="house" value="lannister"></mn-option>
      <mn-option ng-model="house" value="targaryen"></mn-option>

    p For more details check <a href="https://github.com/minimalist-components/mn-option">mn-option docs</a>.

  block scripts
    script(src='docs/vendor.js')
    script(src='dist/angular-mn-option.js')

  script.
    angular.module('app', [
      'mn-option',
    ])

    angular
      .module('app')
      .controller('IndexController', IndexController);

    function IndexController() {
      this.list = 'daenerys'
      this.list2 = ['daenerys', 'cersei']
      this.list3 = ['daenerys', 'robert']
      this.list4 = 'daenerys'

      this.obj = {name: 'darlan'}
      this.array = [{name: 'darlan'}, {name: 'clara'}]
    }

