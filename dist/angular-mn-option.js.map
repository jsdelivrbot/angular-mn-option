{"version":3,"sources":["mn-option/mn-option.directive.js","app.js"],"names":["mnOptionDirective","$parse","controller","$scope","$element","$attrs","name","attr","ngModel","split","length","find","removeAttribute","querySelector","link","scope","element","attributes","modelValue","angular","equals","value","assign","on","$apply","restrict","require","module","$inject","directive"],"mappings":"YAIA,SAASA,mBAAkBC,QAQzB,QAASC,YAAWC,OAAQC,SAAUC,QACpC,GAAMC,MAAOF,SAASG,KAAK,SACtBF,OAAOG,QAAQC,MAAM,KAAKJ,OAAOG,QAAQC,MAAM,KAAKC,OAAS,EAElEN,UAASG,KAAK,OAAQD,MACtBF,SAASO,KAAK,SAASJ,KAAK,OAAQD,MACpCF,SAAS,GAAGQ,gBAAgB,WAC5BR,SAAS,GAAGS,cAAc,SAASD,gBAAgB,WAGrD,QAASE,MAAKC,MAAOC,QAASC,YAC5B,GAAMC,YAAajB,OAAOgB,WAAWT,SAASO,MACzBI,SAAQC,OAAOJ,QAAQ,GAAGK,MAAOH,cAGpDF,QAAQ,GAAGK,MAAQH,WACnBjB,OAAOgB,WAAWT,SAASc,OAAOP,MAAOC,QAAQ,GAAGK,QAGtDL,QAAQL,KAAK,SAASY,GAAG,SAAU,WAEjCtB,OAAOgB,WAAWT,SAASc,OAAOP,MAAOC,QAAQ,GAAGK,OACpDN,MAAMS,WA7BV,OACEC,SAAU,IACVvB,WAAAA,WACAY,KAAAA,KACAY,QAAS,WCTbP,QAAQQ,OAAO,gBDCf3B,kBAAkB4B,SAAW,UAD7BT,QACGQ,OAAO,aACPE,UAAU,WAAY7B","file":"angular-mn-option.js","sourcesContent":["angular\n  .module('mn-option')\n  .directive('mnOption', mnOptionDirective)\n\nfunction mnOptionDirective($parse) {\n  return {\n    restrict: 'E',\n    controller,\n    link,\n    require: 'ngModel',\n  }\n\n  function controller($scope, $element, $attrs) {\n    const name = $element.attr('name')\n      || $attrs.ngModel.split('.')[$attrs.ngModel.split('.').length - 1]\n\n    $element.attr('name', name)\n    $element.find('input').attr('name', name)\n    $element[0].removeAttribute('checked')\n    $element[0].querySelector('input').removeAttribute('checked')\n  }\n\n  function link(scope, element, attributes) {\n    const modelValue = $parse(attributes.ngModel)(scope)\n    const modelApplied = angular.equals(element[0].value, modelValue)\n\n    if (!modelApplied) {\n      element[0].value = modelValue\n      $parse(attributes.ngModel).assign(scope, element[0].value)\n    }\n\n    element.find('input').on('change', () => {\n      $parse(attributes.ngModel).assign(scope, element[0].value)\n      scope.$apply()\n    })\n\n    // const dirtyInput = element[0].querySelector('label + label')\n    // if (dirtyLabel) {\n    //   element[0].removeChild(dirtyLabel)\n    // }\n    // const input = element.find('input')\n  }\n}\n","angular.module('mn-option', [])\n"]}