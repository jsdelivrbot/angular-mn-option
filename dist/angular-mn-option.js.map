{"version":3,"sources":["mn-option/mn-option.directive.js","app.js"],"names":["mnOptionDirective","$parse","angular","module","$inject","directive"],"mappings":"YAIA,SAASA,mBAAkBC,QACzB,SCLFC,QAAQC,OAAO,gBDCfH,kBAAkBI,SAAW,UAD7BF,QACGC,OAAO,aACPE,UAAU,WAAYL","file":"angular-mn-option.js","sourcesContent":["angular\n  .module('mn-option')\n  .directive('mnOption', mnOptionDirective)\n\nfunction mnOptionDirective($parse) {\n  return {\n\n  }\n\n  const obj = {\n    restrict: 'E',\n    controller,\n    link,\n    require: 'ngModel',\n  }\n  console.log(obj)\n\n  function controller($scope, $element, $attrs) {\n    const name = $element.attr('name')\n      || $attrs.ngModel.split('.')[$attrs.ngModel.split('.').length - 1]\n\n    $element.attr('name', name)\n    $element[0].removeAttribute('checked')\n  }\n\n  function link(scope, element, attributes) {\n    const modelValue = $parse(attributes.ngModel)(scope)\n    const modelApplied = angular.equals(element[0].value, modelValue)\n\n    if (!modelApplied) {\n      element[0].value = modelValue\n      // console.log(modelValue)\n      $parse(attributes.ngModel).assign(scope, element[0].value)\n    }\n\n    element.find('input').on('change', (event) => {\n      console.log(event.target)\n      $parse(attributes.ngModel).assign(scope, element[0].value)\n      scope.$apply()\n    })\n\n    // const dirtyInput = element[0].querySelector('label + label')\n    // if (dirtyLabel) {\n    //   element[0].removeChild(dirtyLabel)\n    // }\n    // const input = element.find('input')\n  }\n}\n","angular.module('mn-option', [])\n"]}